import React, { createContext, useState, useContext, ReactNode, useEffect } from 'react';

// Define available languages
export type Language = 'en' | 'es' | 'zh' | 'fr' | 'ar' | 'ru' | 'sw' | 'am' | 'ha' | 'yo' | 'ig' | 'zu' | 'xh' | 'st' | 'mg';

// Languages include major African Union languages
export const languageOptions = [
  // Global languages
  { code: 'en', name: 'English', flag: 'üá∫üá∏' },
  { code: 'fr', name: 'Fran√ßais', flag: 'üá´üá∑' },
  { code: 'ar', name: 'ÿßŸÑÿπÿ±ÿ®Ÿäÿ©', flag: 'üá™üá¨' },
  
  // African Union languages
  { code: 'sw', name: 'Kiswahili', flag: 'üáπüáø' },   // Tanzania/Kenya/East Africa
  { code: 'am', name: '·ä†·àõ·à≠·äõ', flag: 'üá™üáπ' },        // Amharic - Ethiopia
  { code: 'ha', name: 'Hausa', flag: 'üá≥üá¨' },       // Nigeria/Niger/Ghana
  { code: 'yo', name: 'Yor√πb√°', flag: 'üá≥üá¨' },      // Nigeria/Benin
  { code: 'ig', name: 'Igbo', flag: 'üá≥üá¨' },        // Nigeria
  { code: 'zu', name: 'isiZulu', flag: 'üáøüá¶' },     // South Africa
  { code: 'xh', name: 'isiXhosa', flag: 'üáøüá¶' },    // South Africa
  { code: 'st', name: 'Sesotho', flag: 'üá±üá∏' },     // Lesotho/South Africa
  { code: 'mg', name: 'Malagasy', flag: 'üá≤üá¨' },    // Madagascar
  
  // Other global languages
  { code: 'es', name: 'Espa√±ol', flag: 'üá™üá∏' },
  { code: 'zh', name: '‰∏≠Êñá', flag: 'üá®üá≥' },
  { code: 'ru', name: '–†—É—Å—Å–∫–∏–π', flag: 'üá∑üá∫' },
];

interface LanguageContextType {
  language: Language;
  setLanguage: (lang: Language) => void;
  translate: (key: string) => string;
  translateDynamic: (text: string) => Promise<string>;
}

const LanguageContext = createContext<LanguageContextType>({
  language: 'en',
  setLanguage: () => {},
  translate: () => '',
  translateDynamic: async () => '',
});

interface LanguageProviderProps {
  children: ReactNode;
}

// Default translations for key phrases
const translations: Record<Language, Record<string, string>> = {
  // New African languages
  sw: {
    // Swahili translations
    'app.title': 'BlockFinaX',
    'app.slogan': 'Fedha za Biashara Salama kwa Biashara ya Kimataifa',
    'app.welcome': 'Karibu kwenye BlockFinaX',
    
    'nav.dashboard': 'Dashibodi',
    'nav.contracts': 'Mikataba',
    'nav.wallet': 'Pochi',
    'nav.documents': 'Nyaraka',
    'nav.logistics': 'Usafirishaji',
    'nav.tradeFinance': 'Ufadhili wa Biashara',
    'nav.kyc': 'Uthibitishaji wa Utambulisho',
    
    'dashboard.overview': 'Muhtasari',
    'dashboard.recentTransactions': 'Miamala ya Hivi Karibuni',
    'dashboard.activeContracts': 'Mikataba Inayoendelea',
    'dashboard.riskAssessment': 'Tathmini ya Hatari',

    'language.select': 'Chagua Lugha',
  },
  
  // Add minimal translations for other African languages (placeholders)
  am: { 
    'app.title': 'BlockFinaX',
    'language.select': '·âã·äï·âã ·ã≠·àù·à®·å°' 
  }, // Amharic
  ha: { 
    'app.title': 'BlockFinaX',
    'language.select': 'Za…ìi Harshe' 
  }, // Hausa
  yo: { 
    'app.title': 'BlockFinaX',
    'language.select': 'Yan √àd√®' 
  }, // Yoruba
  ig: { 
    'app.title': 'BlockFinaX',
    'language.select': 'H·ªçr·ªç As·ª•s·ª•' 
  }, // Igbo
  zu: { 
    'app.title': 'BlockFinaX',
    'language.select': 'Khetha Ulimi' 
  }, // Zulu
  xh: { 
    'app.title': 'BlockFinaX',
    'language.select': 'Khetha Ulwimi' 
  }, // Xhosa
  st: { 
    'app.title': 'BlockFinaX',
    'language.select': 'Kgetha Puo' 
  }, // Sesotho
  mg: { 
    'app.title': 'BlockFinaX',
    'language.select': 'Fidio fiteny' 
  }, // Malagasy
  
  en: {
    // General
    'app.title': 'BlockFinaX',
    'app.slogan': 'Secure Trade Finance for Global Commerce',
    'app.welcome': 'Welcome to BlockFinaX',
    
    // Navigation
    'nav.dashboard': 'Dashboard',
    'nav.contracts': 'Contracts',
    'nav.wallet': 'Wallet',
    'nav.documents': 'Documents',
    'nav.logistics': 'Logistics',
    'nav.tradeFinance': 'Trade Finance',
    'nav.kyc': 'Identity Verification',
    
    // Dashboard
    'dashboard.overview': 'Overview',
    'dashboard.recentTransactions': 'Recent Transactions',
    'dashboard.activeContracts': 'Active Contracts',
    'dashboard.riskAssessment': 'Risk Assessment',
    'dashboard.financial': 'Financial Dashboard',
    'dashboard.risk': 'Risk Intelligence',
    'dashboard.translation': 'Translation Tool',
    'dashboard.lastUpdated': 'Last updated:',
    'dashboard.totalTradeVolume': 'Total Trade Volume',
    'dashboard.globalTradeActivity': 'Global trade activity',
    'dashboard.activeTradeDeals': 'Active Trade Deals',
    'dashboard.currentTransactions': 'Current transactions',
    'dashboard.securedTransactions': 'Secured Transactions',
    'dashboard.smartContractProtected': 'Smart contract protected',
    'dashboard.transactionLedger': 'Transaction Ledger',
    'dashboard.newTransaction': 'New Transaction',
    'dashboard.recentEscrow': 'Recent escrow contract activities and settlements',
    'dashboard.noTransactions': 'No transactions yet',
    'dashboard.transactionHistory': 'Your transaction history will appear here',
    'dashboard.riskAssessmentComing': 'Risk assessment dashboard coming soon',
    'dashboard.analyzeRisk': 'Analyze your trade portfolio risk factors',
    'dashboard.aiTranslation': 'AI-Enhanced Translation System',
    'dashboard.aiTranslationDesc': 'BlockFinaX uses advanced AI translation to break language barriers in international trade',
    
    // Contracts
    'contracts.create': 'Create Contract',
    'contracts.status.draft': 'Draft',
    'contracts.status.awaitingFunds': 'Awaiting Funds',
    'contracts.status.funded': 'Funded',
    'contracts.status.goodsShipped': 'Goods Shipped',
    'contracts.status.goodsReceived': 'Goods Received',
    'contracts.status.completed': 'Completed',
    
    // Wallet
    'wallet.balance': 'Balance',
    'wallet.send': 'Send',
    'wallet.receive': 'Receive',
    'wallet.transactions': 'Transactions',
    'wallet.fundEscrow': 'Fund Escrow',
    
    // Documents
    'documents.upload': 'Upload Document',
    'documents.verify': 'Verify Document',
    'documents.share': 'Share Document',
    
    // Logistics
    'logistics.book': 'Book Shipment',
    'logistics.track': 'Track Shipment',
    'logistics.providers': 'Logistics Providers',
    
    // Trade Finance
    'finance.apply': 'Apply for Financing',
    'finance.status': 'Application Status',
    
    // KYC
    'kyc.verify': 'Verify Identity',
    'kyc.status': 'Verification Status',
    
    // Common actions
    'actions.save': 'Save',
    'actions.cancel': 'Cancel',
    'actions.confirm': 'Confirm',
    'actions.edit': 'Edit',
    'actions.delete': 'Delete',
    'actions.view': 'View',
    'actions.search': 'Search',
    'actions.filter': 'Filter',
    'actions.more': 'More',
    'actions.login': 'Login',
    'actions.register': 'Register',
    
    // Language selector
    'language.select': 'Select Language',
    
    // Translation demo
    'translation.demo': 'Translation Demo',
    'translation.testSystem': 'Test the AI-enhanced translation system with your own text',
    'translation.usingAI': 'Using AI Translation (OpenAI)',
    'translation.usingDict': 'Using Dictionary Translation',
    'translation.inputText': 'Input Text',
    'translation.examples': 'Examples',
    'translation.enterEnglish': 'Enter English text to translate',
    'translation.selectLanguage': 'Please select a language other than English to see the translation',
  },
  es: {
    // Spanish translations
    'app.title': 'BlockFinaX',
    'app.slogan': 'Financiaci√≥n Comercial Segura para el Comercio Global',
    'app.welcome': 'Bienvenido a BlockFinaX',
    
    'nav.dashboard': 'Panel',
    'nav.contracts': 'Contratos',
    'nav.wallet': 'Billetera',
    'nav.documents': 'Documentos',
    'nav.logistics': 'Log√≠stica',
    'nav.tradeFinance': 'Financiaci√≥n Comercial',
    'nav.kyc': 'Verificaci√≥n de Identidad',
    
    'dashboard.overview': 'Resumen',
    'dashboard.recentTransactions': 'Transacciones Recientes',
    'dashboard.activeContracts': 'Contratos Activos',
    'dashboard.riskAssessment': 'Evaluaci√≥n de Riesgos',
    
    'contracts.create': 'Crear Contrato',
    'contracts.status.draft': 'Borrador',
    'contracts.status.awaitingFunds': 'Esperando Fondos',
    'contracts.status.funded': 'Financiado',
    'contracts.status.goodsShipped': 'Mercanc√≠a Enviada',
    'contracts.status.goodsReceived': 'Mercanc√≠a Recibida',
    'contracts.status.completed': 'Completado',
    
    'wallet.balance': 'Saldo',
    'wallet.send': 'Enviar',
    'wallet.receive': 'Recibir',
    'wallet.transactions': 'Transacciones',
    'wallet.fundEscrow': 'Fondos en Custodia',
    
    'documents.upload': 'Subir Documento',
    'documents.verify': 'Verificar Documento',
    'documents.share': 'Compartir Documento',
    
    'logistics.book': 'Reservar Env√≠o',
    'logistics.track': 'Seguimiento de Env√≠o',
    'logistics.providers': 'Proveedores Log√≠sticos',
    
    'finance.apply': 'Solicitar Financiaci√≥n',
    'finance.status': 'Estado de la Solicitud',
    
    'kyc.verify': 'Verificar Identidad',
    'kyc.status': 'Estado de Verificaci√≥n',
    
    'actions.save': 'Guardar',
    'actions.cancel': 'Cancelar',
    'actions.confirm': 'Confirmar',
    'actions.edit': 'Editar',
    'actions.delete': 'Eliminar',
    'actions.view': 'Ver',
    'actions.search': 'Buscar',
    'actions.filter': 'Filtrar',
    'actions.more': 'M√°s',
    'actions.login': 'Iniciar Sesi√≥n',
    'actions.register': 'Registrarse',
    
    'language.select': 'Seleccionar Idioma',
  },
  zh: {
    // Chinese translations
    'app.title': 'BlockFinaX',
    'app.slogan': '‰∏∫ÂÖ®ÁêÉË¥∏ÊòìÊèê‰æõÂÆâÂÖ®Ë¥∏ÊòìËûçËµÑ',
    'app.welcome': 'Ê¨¢Ëøé‰ΩøÁî®BlockFinaX',
    
    'nav.dashboard': '‰ª™Ë°®Êùø',
    'nav.contracts': 'ÂêàÂêå',
    'nav.wallet': 'Èí±ÂåÖ',
    'nav.documents': 'ÊñáÊ°£',
    'nav.logistics': 'Áâ©ÊµÅ',
    'nav.tradeFinance': 'Ë¥∏ÊòìËûçËµÑ',
    'nav.kyc': 'Ë∫´‰ªΩÈ™åËØÅ',
    
    'dashboard.overview': 'Ê¶ÇËßà',
    'dashboard.recentTransactions': 'ÊúÄËøë‰∫§Êòì',
    'dashboard.activeContracts': 'Ê¥ªË∑ÉÂêàÂêå',
    'dashboard.riskAssessment': 'È£éÈô©ËØÑ‰º∞',
    
    'contracts.create': 'ÂàõÂª∫ÂêàÂêå',
    'contracts.status.draft': 'ËçâÁ®ø',
    'contracts.status.awaitingFunds': 'Á≠âÂæÖËµÑÈáë',
    'contracts.status.funded': 'Â∑≤Ê≥®ËµÑ',
    'contracts.status.goodsShipped': 'ÂïÜÂìÅÂ∑≤ÂèëË¥ß',
    'contracts.status.goodsReceived': 'ÂïÜÂìÅÂ∑≤Êî∂Âà∞',
    'contracts.status.completed': 'Â∑≤ÂÆåÊàê',
    
    'wallet.balance': '‰ΩôÈ¢ù',
    'wallet.send': 'ÂèëÈÄÅ',
    'wallet.receive': 'Êé•Êî∂',
    'wallet.transactions': '‰∫§Êòì',
    'wallet.fundEscrow': 'ÊâòÁÆ°ËµÑÈáë',
    
    'documents.upload': '‰∏ä‰º†ÊñáÊ°£',
    'documents.verify': 'È™åËØÅÊñáÊ°£',
    'documents.share': 'ÂàÜ‰∫´ÊñáÊ°£',
    
    'logistics.book': 'È¢ÑËÆ¢ËøêËæì',
    'logistics.track': 'ËøΩË∏™ËøêËæì',
    'logistics.providers': 'Áâ©ÊµÅÊèê‰æõÂïÜ',
    
    'finance.apply': 'Áî≥ËØ∑ËûçËµÑ',
    'finance.status': 'Áî≥ËØ∑Áä∂ÊÄÅ',
    
    'kyc.verify': 'È™åËØÅË∫´‰ªΩ',
    'kyc.status': 'È™åËØÅÁä∂ÊÄÅ',
    
    'actions.save': '‰øùÂ≠ò',
    'actions.cancel': 'ÂèñÊ∂à',
    'actions.confirm': 'Á°ÆËÆ§',
    'actions.edit': 'ÁºñËæë',
    'actions.delete': 'Âà†Èô§',
    'actions.view': 'Êü•Áúã',
    'actions.search': 'ÊêúÁ¥¢',
    'actions.filter': 'Á≠õÈÄâ',
    'actions.more': 'Êõ¥Â§ö',
    'actions.login': 'ÁôªÂΩï',
    'actions.register': 'Ê≥®ÂÜå',
    
    'language.select': 'ÈÄâÊã©ËØ≠Ë®Ä',
  },
  fr: {
    // French translations
    'app.title': 'BlockFinaX',
    'app.slogan': 'Financement Commercial S√©curis√© pour le Commerce Mondial',
    'app.welcome': 'Bienvenue sur BlockFinaX',
    
    'nav.dashboard': 'Tableau de Bord',
    'nav.contracts': 'Contrats',
    'nav.wallet': 'Portefeuille',
    'nav.documents': 'Documents',
    'nav.logistics': 'Logistique',
    'nav.tradeFinance': 'Financement Commercial',
    'nav.kyc': 'V√©rification d\'Identit√©',
    
    'dashboard.overview': 'Aper√ßu',
    'dashboard.recentTransactions': 'Transactions R√©centes',
    'dashboard.activeContracts': 'Contrats Actifs',
    'dashboard.riskAssessment': '√âvaluation des Risques',
    
    'contracts.create': 'Cr√©er un Contrat',
    'contracts.status.draft': 'Brouillon',
    'contracts.status.awaitingFunds': 'En Attente de Fonds',
    'contracts.status.funded': 'Financ√©',
    'contracts.status.goodsShipped': 'Marchandises Exp√©di√©es',
    'contracts.status.goodsReceived': 'Marchandises Re√ßues',
    'contracts.status.completed': 'Termin√©',
    
    'wallet.balance': 'Solde',
    'wallet.send': 'Envoyer',
    'wallet.receive': 'Recevoir',
    'wallet.transactions': 'Transactions',
    'wallet.fundEscrow': 'Fonds Sous S√©questre',
    
    'documents.upload': 'T√©l√©charger un Document',
    'documents.verify': 'V√©rifier un Document',
    'documents.share': 'Partager un Document',
    
    'logistics.book': 'R√©server une Exp√©dition',
    'logistics.track': 'Suivre une Exp√©dition',
    'logistics.providers': 'Prestataires Logistiques',
    
    'finance.apply': 'Demander un Financement',
    'finance.status': 'Statut de la Demande',
    
    'kyc.verify': 'V√©rifier l\'Identit√©',
    'kyc.status': 'Statut de V√©rification',
    
    'actions.save': 'Enregistrer',
    'actions.cancel': 'Annuler',
    'actions.confirm': 'Confirmer',
    'actions.edit': 'Modifier',
    'actions.delete': 'Supprimer',
    'actions.view': 'Voir',
    'actions.search': 'Rechercher',
    'actions.filter': 'Filtrer',
    'actions.more': 'Plus',
    'actions.login': 'Se Connecter',
    'actions.register': 'S\'inscrire',
    
    'language.select': 'S√©lectionner la Langue',
  },
  ar: {
    // Arabic translations
    'app.title': 'BlockFinaX',
    'app.slogan': 'ÿ™ŸÖŸàŸäŸÑ ÿ™ÿ¨ÿßÿ±Ÿä ÿ¢ŸÖŸÜ ŸÑŸÑÿ™ÿ¨ÿßÿ±ÿ© ÿßŸÑÿπÿßŸÑŸÖŸäÿ©',
    'app.welcome': 'ŸÖÿ±ÿ≠ÿ®Ÿãÿß ÿ®ŸÉ ŸÅŸä BlockFinaX',
    
    'nav.dashboard': 'ŸÑŸàÿ≠ÿ© ÿßŸÑÿ™ÿ≠ŸÉŸÖ',
    'nav.contracts': 'ÿßŸÑÿπŸÇŸàÿØ',
    'nav.wallet': 'ÿßŸÑŸÖÿ≠ŸÅÿ∏ÿ©',
    'nav.documents': 'ÿßŸÑŸÖÿ≥ÿ™ŸÜÿØÿßÿ™',
    'nav.logistics': 'ÿßŸÑÿÆÿØŸÖÿßÿ™ ÿßŸÑŸÑŸàÿ¨ÿ≥ÿ™Ÿäÿ©',
    'nav.tradeFinance': 'ÿßŸÑÿ™ŸÖŸàŸäŸÑ ÿßŸÑÿ™ÿ¨ÿßÿ±Ÿä',
    'nav.kyc': 'ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿßŸÑŸáŸàŸäÿ©',
    
    'dashboard.overview': 'ŸÜÿ∏ÿ±ÿ© ÿπÿßŸÖÿ©',
    'dashboard.recentTransactions': 'ÿßŸÑŸÖÿπÿßŸÖŸÑÿßÿ™ ÿßŸÑÿ£ÿÆŸäÿ±ÿ©',
    'dashboard.activeContracts': 'ÿßŸÑÿπŸÇŸàÿØ ÿßŸÑŸÜÿ¥ÿ∑ÿ©',
    'dashboard.riskAssessment': 'ÿ™ŸÇŸäŸäŸÖ ÿßŸÑŸÖÿÆÿßÿ∑ÿ±',
    
    'contracts.create': 'ÿ•ŸÜÿ¥ÿßÿ° ÿπŸÇÿØ',
    'contracts.status.draft': 'ŸÖÿ≥ŸàÿØÿ©',
    'contracts.status.awaitingFunds': 'ŸÅŸä ÿßŸÜÿ™ÿ∏ÿßÿ± ÿßŸÑÿ™ŸÖŸàŸäŸÑ',
    'contracts.status.funded': 'ŸÖŸÖŸàŸÑ',
    'contracts.status.goodsShipped': 'ÿ™ŸÖ ÿ¥ÿ≠ŸÜ ÿßŸÑÿ®ÿ∂ÿßÿ¶ÿπ',
    'contracts.status.goodsReceived': 'ÿ™ŸÖ ÿßÿ≥ÿ™ŸÑÿßŸÖ ÿßŸÑÿ®ÿ∂ÿßÿ¶ÿπ',
    'contracts.status.completed': 'ŸÖŸÉÿ™ŸÖŸÑ',
    
    'wallet.balance': 'ÿßŸÑÿ±ÿµŸäÿØ',
    'wallet.send': 'ÿ•ÿ±ÿ≥ÿßŸÑ',
    'wallet.receive': 'ÿßÿ≥ÿ™ŸÑÿßŸÖ',
    'wallet.transactions': 'ÿßŸÑŸÖÿπÿßŸÖŸÑÿßÿ™',
    'wallet.fundEscrow': 'ÿ™ŸÖŸàŸäŸÑ ÿßŸÑÿ∂ŸÖÿßŸÜ',
    
    'documents.upload': 'ÿ™ÿ≠ŸÖŸäŸÑ ŸÖÿ≥ÿ™ŸÜÿØ',
    'documents.verify': 'ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿßŸÑŸÖÿ≥ÿ™ŸÜÿØ',
    'documents.share': 'ŸÖÿ¥ÿßÿ±ŸÉÿ© ÿßŸÑŸÖÿ≥ÿ™ŸÜÿØ',
    
    'logistics.book': 'ÿ≠ÿ¨ÿ≤ ÿ¥ÿ≠ŸÜÿ©',
    'logistics.track': 'ÿ™ÿ™ÿ®ÿπ ÿßŸÑÿ¥ÿ≠ŸÜÿ©',
    'logistics.providers': 'ŸÖÿ≤ŸàÿØŸà ÿßŸÑÿÆÿØŸÖÿßÿ™ ÿßŸÑŸÑŸàÿ¨ÿ≥ÿ™Ÿäÿ©',
    
    'finance.apply': 'ÿ∑ŸÑÿ® ÿ™ŸÖŸàŸäŸÑ',
    'finance.status': 'ÿ≠ÿßŸÑÿ© ÿßŸÑÿ∑ŸÑÿ®',
    
    'kyc.verify': 'ÿßŸÑÿ™ÿ≠ŸÇŸÇ ŸÖŸÜ ÿßŸÑŸáŸàŸäÿ©',
    'kyc.status': 'ÿ≠ÿßŸÑÿ© ÿßŸÑÿ™ÿ≠ŸÇŸÇ',
    
    'actions.save': 'ÿ≠ŸÅÿ∏',
    'actions.cancel': 'ÿ•ŸÑÿ∫ÿßÿ°',
    'actions.confirm': 'ÿ™ÿ£ŸÉŸäÿØ',
    'actions.edit': 'ÿ™ÿπÿØŸäŸÑ',
    'actions.delete': 'ÿ≠ÿ∞ŸÅ',
    'actions.view': 'ÿπÿ±ÿ∂',
    'actions.search': 'ÿ®ÿ≠ÿ´',
    'actions.filter': 'ÿ™ÿµŸÅŸäÿ©',
    'actions.more': 'ÿßŸÑŸÖÿ≤ŸäÿØ',
    'actions.login': 'ÿ™ÿ≥ÿ¨ŸäŸÑ ÿßŸÑÿØÿÆŸàŸÑ',
    'actions.register': 'ÿßŸÑÿ™ÿ≥ÿ¨ŸäŸÑ',
    
    'language.select': 'ÿßÿÆÿ™ÿ± ÿßŸÑŸÑÿ∫ÿ©',
  },
  ru: {
    // Russian translations
    'app.title': 'BlockFinaX',
    'app.slogan': '–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –¢–æ—Ä–≥–æ–≤–æ–µ –§–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –ú–∏—Ä–æ–≤–æ–π –¢–æ—Ä–≥–æ–≤–ª–∏',
    'app.welcome': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ BlockFinaX',
    
    'nav.dashboard': '–ü–∞–Ω–µ–ª—å –£–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
    'nav.contracts': '–ö–æ–Ω—Ç—Ä–∞–∫—Ç—ã',
    'nav.wallet': '–ö–æ—à–µ–ª–µ–∫',
    'nav.documents': '–î–æ–∫—É–º–µ–Ω—Ç—ã',
    'nav.logistics': '–õ–æ–≥–∏—Å—Ç–∏–∫–∞',
    'nav.tradeFinance': '–¢–æ—Ä–≥–æ–≤–æ–µ –§–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ',
    'nav.kyc': '–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –õ–∏—á–Ω–æ—Å—Ç–∏',
    
    'dashboard.overview': '–û–±–∑–æ—Ä',
    'dashboard.recentTransactions': '–ü–æ—Å–ª–µ–¥–Ω–∏–µ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏',
    'dashboard.activeContracts': '–ê–∫—Ç–∏–≤–Ω—ã–µ –ö–æ–Ω—Ç—Ä–∞–∫—Ç—ã',
    'dashboard.riskAssessment': '–û—Ü–µ–Ω–∫–∞ –†–∏—Å–∫–æ–≤',
    
    'contracts.create': '–°–æ–∑–¥–∞—Ç—å –ö–æ–Ω—Ç—Ä–∞–∫—Ç',
    'contracts.status.draft': '–ß–µ—Ä–Ω–æ–≤–∏–∫',
    'contracts.status.awaitingFunds': '–û–∂–∏–¥–∞–Ω–∏–µ –°—Ä–µ–¥—Å—Ç–≤',
    'contracts.status.funded': '–§–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–æ',
    'contracts.status.goodsShipped': '–¢–æ–≤–∞—Ä—ã –û—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã',
    'contracts.status.goodsReceived': '–¢–æ–≤–∞—Ä—ã –ü–æ–ª—É—á–µ–Ω—ã',
    'contracts.status.completed': '–ó–∞–≤–µ—Ä—à–µ–Ω–æ',
    
    'wallet.balance': '–ë–∞–ª–∞–Ω—Å',
    'wallet.send': '–û—Ç–ø—Ä–∞–≤–∏—Ç—å',
    'wallet.receive': '–ü–æ–ª—É—á–∏—Ç—å',
    'wallet.transactions': '–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏',
    'wallet.fundEscrow': '–§–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞—Ç—å –î–µ–ø–æ–∑–∏—Ç',
    
    'documents.upload': '–ó–∞–≥—Ä—É–∑–∏—Ç—å –î–æ–∫—É–º–µ–Ω—Ç',
    'documents.verify': '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –î–æ–∫—É–º–µ–Ω—Ç',
    'documents.share': '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –î–æ–∫—É–º–µ–Ω—Ç–æ–º',
    
    'logistics.book': '–ó–∞–∫–∞–∑–∞—Ç—å –ü–µ—Ä–µ–≤–æ–∑–∫—É',
    'logistics.track': '–û—Ç—Å–ª–µ–¥–∏—Ç—å –ü–µ—Ä–µ–≤–æ–∑–∫—É',
    'logistics.providers': '–õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –ü—Ä–æ–≤–∞–π–¥–µ—Ä—ã',
    
    'finance.apply': '–ü–æ–¥–∞—Ç—å –ó–∞—è–≤–∫—É –Ω–∞ –§–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ',
    'finance.status': '–°—Ç–∞—Ç—É—Å –ó–∞—è–≤–∫–∏',
    
    'kyc.verify': '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –õ–∏—á–Ω–æ—Å—Ç—å',
    'kyc.status': '–°—Ç–∞—Ç—É—Å –ü—Ä–æ–≤–µ—Ä–∫–∏',
    
    'actions.save': '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å',
    'actions.cancel': '–û—Ç–º–µ–Ω–∏—Ç—å',
    'actions.confirm': '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å',
    'actions.edit': '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
    'actions.delete': '–£–¥–∞–ª–∏—Ç—å',
    'actions.view': '–ü—Ä–æ—Å–º–æ—Ç—Ä',
    'actions.search': '–ü–æ–∏—Å–∫',
    'actions.filter': '–§–∏–ª—å—Ç—Ä',
    'actions.more': '–ï—â–µ',
    'actions.login': '–í–æ–π—Ç–∏',
    'actions.register': '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è',
    
    'language.select': '–í—ã–±—Ä–∞—Ç—å –Ø–∑—ã–∫',
  },
};

export const LanguageProvider: React.FC<LanguageProviderProps> = ({ children }) => {
  const [language, setLanguage] = useState<Language>('en');

  // Load language preference from localStorage on mount
  useEffect(() => {
    const savedLanguage = localStorage.getItem('language') as Language;
    if (savedLanguage && Object.keys(translations).includes(savedLanguage)) {
      setLanguage(savedLanguage);
    }
  }, []);

  // Save language preference to localStorage when it changes
  useEffect(() => {
    localStorage.setItem('language', language);
  }, [language]);

  // Function to get translation for a key
  const translate = (key: string): string => {
    // Try to find the key in the current language
    if (translations[language] && translations[language][key]) {
      return translations[language][key];
    }
    
    // Fallback to English if the key doesn't exist in current language
    if (translations.en && translations.en[key]) {
      return translations.en[key];
    }
    
    // Return the key itself if no translation found
    return key;
  };

  // Function to translate dynamic content using our local translation service
  const translateDynamic = async (text: string): Promise<string> => {
    if (language === 'en') return text; // No need to translate if already in English
    
    try {
      // Import the translation service dynamically to avoid circular dependencies
      const { TranslationService } = await import('../services/translationService');
      
      // Use our local translation service
      return TranslationService.translateDynamicContent(text, language);
    } catch (error) {
      console.error("Translation error:", error);
      return text; // Fallback to original text on error
    }
  };

  return (
    <LanguageContext.Provider value={{ language, setLanguage, translate, translateDynamic }}>
      {children}
    </LanguageContext.Provider>
  );
};

// Custom hook to use the language context
export const useLanguage = () => useContext(LanguageContext);

export default LanguageContext;